spring:
  application:
    name: user-service
  server:
    port: 8081
  datasource:
    url: jdbc:postgresql://localhost:5432/user-service
    username: postgres
    password: parth
  jpa:
    show-sql: true
    hibernate:
      ddl-auto: update
      properties:
        hibernate:
          dialect: org.hibernate.dialect.PostgreSQLDialect
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: .apps.googleusercontent.com
            client-secret: GOCSPX--
            scope: email,profile
            redirect-uri: "{baseUrl}/login/oauth2/code/{registrationId}"
            authorization-grant-type: authorization_code
        provider:
          google:
            authorization-uri: https://accounts.google.com/o/oauth2/auth
            token-uri: https://oauth2.googleapis.com/token
            user-info-uri: https://www.googleapis.com/oauth2/v3/userinfo
  data:
    mongodb:
      uri:
  rabbitmq:
    host: localhost
    port: 5672
    username: guest
    password: guest

logging:
  level:
    org:
      hibernate:
        SQL: DEBUG
        type:
          descriptor:
            sql:
              BasicBinder: TRACE
      springframework:
        security: DEBUG
        web: DEBUG

jwt:
  secret:
  expiration: 31536000000

resilience4j:
  rateLimiter:
    instances:
      default:
        limitForPeriod: 10
        limitRefreshPeriod: 60s
        timeoutDuration: 0
